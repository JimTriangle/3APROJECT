

var url = require('url') ;
var fs = require('fs');
var querystring = require('querystring');

var express = require('express');
var app = express();

// connxion to redis server
var redis = require("redis")
var publisher = redis.createClient()



// channel array list
var channels = [
	{key : 'saucisse',
	value : 'value1'},
	
	{key : 'concon',
	value : 'value2'}
];



// subscribe to a channel
app.get('/subChannel', function (req, res) {
	
	var params = querystring.parse(url.parse(req.url).query);	
	var response = verifyIfChannelExist(params['channelName']);

	if (response == false) {	  
		createChannel(params['channelName'], params['geoData']);	  
	}
	publisher.publish("test", "haaaaai");
	publisher.publish("test", "kthxbai");
	res.send('response to Mathieu ...');
});


// verify if a single channel exists
function verifyIfChannelExist(channelName) {
	
	for (var i = 0; i < channels.length; i++) {
		var object = channels[i];
		for (var property in object) {
			
			if (object[property] == channelName && property == "key") {
				return true;
			}			
		}
	}
	return false
}


// create a new channel
function createChannel(channelName, geoData) {
	channels.push({
		key:   channelName,
		value: geoData
	});
}







// unsubscribre to a channel
app.post('/unsubChannel', function (req, res) {
  var params = querystring.parse(url.parse(req.url).query);
  res.send('POST request to the homepage');
});




// publish to a channel
function publishIntoChannel(channelName) {
  console.log(word);
}

// search if existing channel from topic name
function searchInvolvedChannelT(topicName) {
  console.log(word);
}

// search if existing channel from geoloc position
function searchInvolvedChannelG(geoloc) {
  console.log(word);
}

app.listen(3000, function () {
  console.log('serveur en marche ...');
});















